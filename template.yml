AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Serverless Spring Boot 2 API - com.explorer.ledger.api::commodity-ledger-api
Globals:
  Api:
    EndpointConfiguration: REGIONAL

Resources:
   CommodityLedgerApi:
       Type: AWS::Serverless::Api
       Properties:
         Name: 'commodity-ledger-api'
         StageName: staging
         BinaryMediaTypes:
            - 'multipart/form-data'
            - 'application/octet-stream'
         Cors:
           AllowMethods: "'PUT, POST, GET, OPTIONS, DELETE'"
           AllowHeaders: "'X-Forwarded-For,Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'"
           AllowOrigin: "'*'"
         Auth:
           AddDefaultAuthorizerToCorsPreflight: false
           DefaultAuthorizer: commodityLedgerAuthorizer
           Authorizers:
             commodityLedgerAuthorizer:
               UserPoolArn: arn:aws:cognito-idp:eu-west-2:*********:userpool/eu-west-2_eHOEapyWX
   LamdaInternetAccessSG:
     Type: AWS::EC2::SecurityGroup
     Properties:
         GroupDescription: Allow http to outside world
         VpcId: vpc-************
         SecurityGroupEgress:
         - IpProtocol: tcp
           FromPort: 443
           ToPort: 443
           CidrIp: 0.0.0.0/0
   CommodityLedgerApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.explorer.ledger.api.StreamLambdaHandler::handleRequest
      Runtime: java8
      CodeUri: .
      MemorySize: 1024
      VpcConfig:
        SecurityGroupIds:
          - sg-083ef16dbb120b2d9
          - !GetAtt 
             - LamdaInternetAccessSG
             - GroupId
        SubnetIds:
          - subnet-09fe570b66b568157
          - subnet-01905dbf7751b4927
          - subnet-0197d9e919dd925b8
      Policies:
         - AWSXRayDaemonWriteAccess
         - AWSLambdaBasicExecutionRole
         - Statement:
           - Sid: S3ListCryptoPolicy
             Effect: Allow
             Action:
                - s3:ListBucket
             Resource: 'arn:aws:s3:::simple-network-crypto-bucket-b'
           - Sid: S3GetCryptoPolicy
             Effect: Allow
             Action:
                - s3:GetObject
             Resource: 'arn:aws:s3:::simple-network-crypto-bucket-b/*'
           - Sid: CognitoPolicy
             Effect: Allow
             Action:
                -  cognito-idp:AdminListGroupsForUser
                -  cognito-idp:AdminGetUser
             Resource: 'arn:aws:cognito-idp:eu-west-2:**********:userpool/eu-west-2_eHOEapyWX'
      Timeout: 300
      Events:
        ProxyApiResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
            RestApiId: !Ref CommodityLedgerApi
Outputs:
  CommodityLedgerApi:
    Description: URL for application
    Value: !Sub 'https://${CommodityLedgerApi}.execute-api.${AWS::Region}.amazonaws.com/staging/ping'
    Export:
      Name: CommodityLedgerApi
